type Blog @model {
  id: ID!
  name: String!
  posts: [Post] @connection(keyName: "byBlog", fields: ["id"])
}

type Post @model @key(name: "byBlog", fields: ["blogID"]) {
  id: ID!
  title: String!
  blogID: ID!
  blog: Blog @connection(fields: ["blogID"])
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

type Comment @model @key(name: "byPost", fields: ["postID", "content"]) {
  id: ID!
  postID: ID!
  post: Post @connection(fields: ["postID"])
  content: String!
}

type AuthDetail @model @auth(rules: [{allow: owner}]) {
  email: String!
  password: String!
  username: String!
}
type Preferences @model @auth(rules: [{allow: owner}]) 
  @key( fields:["email"])
{
  email: String!
  screenName: String!
  name: String!
  soberietyDate: String!
}
type Meetings @model @auth(rules: [{allow: owner}])
  @key( fields:["email"])
{
  email: String!
  meetings: [String]!
}

type Gratitude @model @auth(rules: [{allow: owner}]) 
  @key( fields:["email", "time"])
{
  email: String!
  title: String!
  time: Int!
  entries: [String]!
}


